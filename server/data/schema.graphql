"""Parameters of a client"""
type Cliente {
  id: ID
  name: String
  surname: String
  company: String
  emails: [Email]
  age: Int
  type: TypeClient
  orders: [Order]
}
type Order {
  product: String
  pirce: Int
}
type Email {
  email: String
}
enum TypeClient {
  BASIC
  PREMIUM
}
type Product {
  id: ID
  name: String!
  price: Int!
  stock: Int!
}
"""Query client"""
type Query {
  """Query to get all clients"""
  getClients(limit: Int, offset: Int): [Cliente]
  """Query to get client information"""
  getClient(id: ID): Cliente
  """Query to get number of clients"""
  numberClients: String
  """Query to get all products"""
  getProducts(limit: Int, offset: Int): [Product]
"""Query to get client information"""
  getProduct(id: ID): Product
  """Query to get number of clients"""
  numberProducts: String
}

# Mutaciones
input EmailInput {
  email: String
}
input OrderInput {
  product: String
  price: Int
}
"""Parameters to create new client"""
input ClientInput {
  id: ID
  name: String!
  surname: String!
  company: String!
  emails: [EmailInput]!
  age: Int!
  type: TypeClient!
  orders: [OrderInput]
}
input UpdateClientInput {
  id: ID
  name: String
  surname: String
  company: String
  emails: [EmailInput]
  age: Int
  type: TypeClient
  orders: [OrderInput]
}
input ProductInput {
  id: ID
  name: String
  price: Int
  stock: Int
}
"""Mutation to clients"""
type Mutation {
  """Mutation to create new clients"""
  createClient(input: ClientInput): Cliente
  """Mutation to update client"""
  updateClient(input: UpdateClientInput): Cliente
  """Mutation to delete client"""
  deleteClient(id: ID): String
  """Mutation to create new product"""
  newProduct(input: ProductInput): Product
  """Mutation to update product"""
  updateProduct(input: ProductInput): Product
  """Mutation to delete product"""
  deleteProduct(id: ID): String
}
