"""Parameters of a client"""
type Client {
  id: ID
  name: String
  surname: String
  company: String
  emails: [Email]
  age: Int
  type: TypeClient
}
type Email {
  email: String
}
enum TypeClient {
  BASIC
  PREMIUM
}
enum StateOrder {
  PENDING
  COMPLETED
  CANCELLED
}
type Product {
  id: ID
  name: String!
  price: Int!
  stock: Int!
}
type Order {
  id: ID
  order: [ProductOrder]
  total: Int
  date: String
  client: ID
  state: StateOrder
}
type ProductOrder {
  id: ID
  quantity: Int
}
type TotalClient {
  total: Float
  client: [Client]
}
"""Query client"""
type Query {
  """Query to get all clients"""
  getClients(limit: Int, offset: Int): [Client]
  """Query to get client information"""
  getClient(id: ID): Client
  """Query to get number of clients"""
  numberClients: String
  """Query to get all products"""
  getProducts(limit: Int, offset: Int): [Product]
"""Query to get client information"""
  getProduct(id: ID): Product
  """Query to get number of clients"""
  numberProducts: String
  """Query to get orders of clients"""
  getOrders(id: String): [Order]
  """Query to get top 10 clients"""
  topClients: [TotalClient]
}

# Mutaciones
input EmailInput {
  email: String
}
"""Parameters to create new client"""
input ClientInput {
  id: ID
  name: String!
  surname: String!
  company: String!
  emails: [EmailInput]!
  age: Int!
  type: TypeClient!
  orders: [OrderInput]
}
input UpdateClientInput {
  id: ID
  name: String
  surname: String
  company: String
  emails: [EmailInput]
  age: Int
  type: TypeClient
  orders: [OrderInput]
}
input ProductInput {
  id: ID
  name: String
  price: Int
  stock: Int
}
input OrderInput {
  id: ID
  order: [ProductOrderInput]
  total: Int
  date: String
  client: ID
  state: StateOrder
}
input ProductOrderInput {
  id: ID
  quantity: Int
}
"""Mutation to clients"""
type Mutation {
  """Mutation to create new clients"""
  createClient(input: ClientInput): Client
  """Mutation to update client"""
  updateClient(input: UpdateClientInput): Client
  """Mutation to delete client"""
  deleteClient(id: ID): String
  """Mutation to create new product"""
  createProduct(input: ProductInput): Product
  """Mutation to update product"""
  updateProduct(input: ProductInput): Product
  """Mutation to delete product"""
  deleteProduct(id: ID): String
  """Mutation to create Orders"""
  newOrder(input: OrderInput): Order
  """Mutation to update Order"""
  updateOrder(input: OrderInput): String
}
